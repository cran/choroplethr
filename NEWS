choroplethr 2.1.1
----------------------------------------------------------------
-Bug fix: text for vignettes was for some reason not rebuilt into HTML.


choroplethr 2.1.0
----------------------------------------------------------------
-Add function county_zoom_choropleth, which allows you to zoom in on counties, not states. If 
an individual county is specified, render it with no fill color.
-Updated and corrected the values of df_president. Thank you to Richard Careaga.
-Update vignettes about US maps. Specifically, provide information about custom scales to include warning about interactions with insets of AK and HI.
-Add admin1_choropleth function which allows you to create an Administrative Level 1 choropleth of any
country in the world.  (Administrative Level 1 is the generic term for states, provinces, etc.). Create
a vignette demonstrating usage of this function.

choroplethr 2.0.0
----------------------------------------------------------------

-Move the maps and their helper data.frames to a separate package, choroplethrMaps
-Change dependencies (remove dependencies on maps, grid, plyr->dplyr, add R6, add WDI)
-Create R6 objects to simplify map creation
  -Base Choropleth object
	-CountryChoropleth inherits directly from Choropleth
	-Create USAChoropleth object to handle similar issues for all USA maps, such as insets and state boundaries
	-StateChoropleth, CountyChoropleth, ZipMap all inherit from those USAChoropleth
	-From a user's perspective, the only important functions on Choropleth are: new()/initialize() and render(). 
	-From a developer's perspective, you care about three additional functions: clip(), discretize() and bind(). If you are using choroplethr as a framework to create your own choropleth, you might want to override those functions.  Those functions are all called by prepare_map(). So in some sense, you just need to care about prepare_map() and render().
-Create helper functions for creating the 4 maps.  See ?state_choropleth, ?county_choropleth, ?zip_map, ?country_choropleth for details. Importantly, all those functions have the five exact same parameters, four of which are optional.
-Remove some functions that I think no one was using (see NAMESPACE diff for details)
-Change some parameters on choroplethr_acs for consistency.
-Break up the "data(choroplethr)" object. Now just say the object you actually want (e.g. "data(df_pop_state)"). This makes maintenance much easier.
-Add choroplethr_wdi function, which generates choropleths from World Bank data.  See the documentation of the WDI package for details.
-Update function documentation and examples.
-Update tests.
-Change country.names from being a vector of English words to a data.frame with 2 columns: one named region (which contains English words), and one named "iso2c", which contains the iso2c equivalent names.

BUG FIX
  -with character input for values inset maps were not having consistent scales with main map. Fix this by converting character input to factors early on.
  -setting custom scales and having the values work across insets (e.g. AK and HI) now works if you create a Choropleth object and set the ggplot_scale field to the scale you want.

choroplethr 1.7.0
----------------------------------------------------------------

FEATURE
  -Add a world map: see ?map.world for more info
  -Add a vector of all countries in the world map: see ?country.names for more info
  -Add support for the world map to the choroplethr() function: see ?choroplethr for more info.

choroplethr 1.6.0
----------------------------------------------------------------

FEATURE
  -Add a flag to the choroplethr() function, renderAsInsets.  If TRUE and user asked to view all 
states, then AK and HI will be rendered as insets, which is the standard way of rendering a map of
all 50 US states. 
  -Create a data.frame, map.states, which contains a map for all 50 states plus the District of Columbia.  See ?map.states for details.
  -Create a data.frame, state.names, which contains naming information for each state in map.states. See ?state.names for more information.
  -Create a data.frame, map.counties, which contains a map for the counties of all 50 states plus the District of Columbia.  See ?map.counties for details.
  -Create a data.frame, county.names, which contains naming information for each county in map.counties. See ?county.names for more information.

BUG FIXES

choroplethr 1.5.0
----------------------------------------------------------------

FEATURE
  -Make NA values appear black on the map.  The default value for NA values in ggplot2, grey50, was difficult to distinguish from the light values in the brewer scale.
  -Create function clip_df(data.frame, lod) that clips a data.frame to a map.  This is useful
when you want to do statistics on a data.frame (such as above/below median values), and have your computations match the map.  For example, maps in choroplethr do not contain Alaska or Hawaii.
  -Rename vignettes so that they appear in proper order on CRAN website.
  -Export format_levels function

BUG FIXES
  -handle counties with leading zeroes.

choroplethr 1.4.0
----------------------------------------------------------------

FEATURE
  -New choroplethr_animate function for animating choropleth maps.  See ?choroplethr_animate
  -Handle string data as values
  -add example datasets and update help
  -Add commas to scales.

BUG FIXES
  -Choropleths of state, county and zip data with factor values were broken

choroplethr 1.3.0
----------------------------------------------------------------

BUG FIXES
  -Subsetting by state was broken for state and county choropleths
  -Fix a bug where ACS state choropleths were not displaying titles
  
FEATURES
  -Some features to support integration with shiny - requested by pssguy via github.  
    -New function get_acs_column_names 
    -New parameter column_idx parameter to function get_acs_df
  -Improve formatting of discrete scales
  
choroplethr 1.2.0
----------------------------------------------------------------

FEATURES
-Create 3 new functions which support a workflow of giving users more control of choropleths
  -get_acs_df, which gets an ACS table as a data.frame.  You can then use, for example, cut2 to discretize the values as you see fit.
  -bind_df_to_map, which binds a data.frame of (region, value) pairs to a state, county or zip map.
  -render_choropleth, which renders a choropleth from (map, value) pairs.

-Improve documentation

choroplethr 1.1.0
----------------------------------------------------------------

FEATURES
  -Allow users to specify choropleths of a subset of states.  See the "states" parameter in ?choroplethr and ?choroplethr_acs.
  -choroplethr_acs now supports year and span fields.  See http://1.usa.gov/1geFSSj for a list of all ACS years with spans.  However, see http://www.census.gov/developers/data/ for a list of which ACS are available via the Census API.  Currently it is the 5-year surveys ending in 2010, 2011, 2012.  Thanks to Ezra Haber Glenn for clarifying this.

choroplethr 1.0.1
----------------------------------------------------------------

  -Add requirement of minimum R version of 3.0.0 in the DESCRIPTION file.  See https://groups.google.com/forum/#!topic/choroplethr/Owv7NgAacGE for details.
